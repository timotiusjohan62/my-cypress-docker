# ==============================================
# ENVIRONMENT VARIABLES TEMPLATE
# ==============================================
# Copy this file to .env and fill in the actual values
# DO NOT commit .env files to version control

# ==============================================
# DATABASE CONFIGURATION
# ==============================================
# PostgreSQL database credentials
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_secure_password_here
POSTGRES_DB=testdb
POSTGRES_HOST=db
POSTGRES_PORT=5432

# Alternative database connection URL format
DATABASE_URL=postgresql://postgres:password@db:5432/testdb

# ==============================================
# BACKEND/API CONFIGURATION
# ==============================================
# Backend service configuration
BACKEND_PORT=4000
BACKEND_HOST=backend
NODE_ENV=development
API_BASE_URL=http://backend:4000

# Database host for backend (usually same as POSTGRES_HOST)
PG_HOST=db

# ==============================================
# CYPRESS TESTING CONFIGURATION
# ==============================================
# Cypress E2E testing configuration
CYPRESS_BASE_URL=http://backend:4000
CYPRESS_VIDEO=false
CYPRESS_SCREENSHOTS_ON_FAILURE=false
CYPRESS_TRASH_ASSETS_BEFORE_RUNS=true
CYPRESS_VIEWPORT_WIDTH=1280
CYPRESS_VIEWPORT_HEIGHT=720
CYPRESS_BROWSER=electron
CYPRESS_HEADED=false

# Evidence and reporting paths
CYPRESS_EVIDENCE_DIR=/e2e/cypress/evidence
CYPRESS_SPEC_PATTERN=cypress/e2e/**/*.cy.js

# Optional: Cypress Cloud integration
CYPRESS_RECORD_KEY=your_cypress_record_key_here
CYPRESS_PROJECT_ID=your_cypress_project_id_here

# ==============================================
# JMETER LOAD TESTING CONFIGURATION
# ==============================================
# JMeter performance testing settings
JMETER_TEST_PLAN=simple-load-test.jmx
JMETER_USERS=5
JMETER_RAMP_TIME=10
JMETER_HOST=backend
JMETER_PORT=4000
JMETER_RESULTS_DIR=/tests/results

# ==============================================
# DOCKER & NETWORKING
# ==============================================
# Docker Compose project configuration
COMPOSE_PROJECT_NAME=my-cypress-docker
NETWORK_NAME=app-network

# ==============================================
# DEVELOPMENT & DEBUGGING
# ==============================================
# Debugging and logging settings
DEBUG=false
LOG_LEVEL=info
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# ==============================================
# TESTING ENVIRONMENT SPECIFIC
# ==============================================
# Testing flags and timeouts
IS_TESTING=false
TEST_TIMEOUT=60000
CI=false

# ==============================================
# SECURITY & MONITORING (Production)
# ==============================================
# Production-specific settings
ENABLE_MONITORING=false
METRICS_ENDPOINT=/metrics
SECURE_HEADERS=false

# ==============================================
# USAGE EXAMPLES
# ==============================================
# 
# Development environment:
#   cp .env.example .env.development
#   # Edit .env.development with dev-specific values
#
# Testing environment:
#   cp .env.example .env.test
#   # Edit .env.test with test-specific values
#
# Production environment:
#   cp .env.example .env.production
#   # Edit .env.production with prod-specific values
#   # IMPORTANT: Use secure passwords in production!
#
# Using with Docker Compose:
#   docker-compose --env-file .env.development up
#   docker-compose --env-file .env.test up
#   docker-compose --env-file .env.production up
